#!/usr/bin/env python

#
# Simple post-receive git hook to install on your git server
# Make sure you have dogapi install; usually fixed by doing
#   sudo easy_install dogapi
#
# To install:
# 1. copy this file to your repository, in .git/hooks/
# 2. rename the file from git-post-receive-hook to post-receive
# 3. make sure ls -l .git/hooks/ contains "post-receive"
# 4. make that file executable (chmod 755 .git/hooks/post-receive)
# 5. set up your datadog keys with git:
#    git config datadog.api abcdefghi123456
#    git config datadog.application jklmnop7890123



import logging
from logging.handlers import SysLogHandler
logger = logging.getLogger("datadogit")
logger.addHandler(SysLogHandler())

try:
    import os
    import sys
    from hashlib import sha1
    from socket import gethostname
    from dogapi import dog

    dog.api_key = os.popen("git config datadog.api").read().strip()
    dog.application_key = os.popen("git config datadog.application").read().strip()

    logger.debug("Notifying Datadog with %s/%s" % (dog.api_key, dog.application_key))

    # Extract oldrev, newrev, refs
    args = sys.stdin.read().split()
    assert args is not None and len(args) == 3

    # Extract the log entry for the commits
    p = os.popen("git log --graph --format=format:'%%h %%ce %%s' %s..%s" % (args[0], args[1]))
    event_data = p.read()
    commit_count = event_data.count("\n")

    # Events are limited to 4KB in size
    if len(event_data) > 4000: event_data = event_data[:3980] + "..."

    # Surround event_data with $$$ to trigger fixed-width font treatment
    event_data = "$$$\n" + event_data + "\n$$$"

    event_title = ""

    # Used to aggregate events together, best left alone.
    event_object = sha1(gethostname() + ":" + os.getcwd() + ":" + args[2])

    # Post to Datadog
    if commit_count <= 1:
        event_title = "Commit on %s" % args[2]
    else: 
        event_title = "Commits on %s" % args[2]

    dog.event(event_title, event_data,
              event_type="commit",
              source_type_name="git",
              event_object=event_object)

    logger.debug("Datadog has been notified")
except ImportError:
    logger.warn("Make sure the dogapi module is installed; easy_install dogapi should do the trick")
except:
    # If something happens, survive
    logger.exception("Error while notifying Datadog")
